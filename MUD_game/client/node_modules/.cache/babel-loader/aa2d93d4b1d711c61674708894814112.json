{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Documents\\\\python_projects\\\\MUD_game\\\\client\\\\src\\\\StatScreen.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noBullets = {\n  listStyleType: \"none\"\n};\n\nfunction bonusCalc(stat, score) {\n  if (stat === \"Armor Class\") return score;\n  return Math.floor((score - 10) / 2);\n}\n\nfunction StatHeaders() {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"\\\"Ability\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"\\\"Score\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"\\\"Bonus\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StatHeaders;\n\nfunction StatLine(props) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.slot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: bonusCalc(props.slot, props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = StatLine;\n\nfunction StatScreen(props) {\n  var statList = Object.keys(props.stats);\n  var labels = statList.map(key => /*#__PURE__*/_jsxDEV(StatLine, {\n    slot: key,\n    value: props.stats[key]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 20\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(StatHeaders, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), labels]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = StatScreen;\nexport default StatScreen;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StatHeaders\");\n$RefreshReg$(_c2, \"StatLine\");\n$RefreshReg$(_c3, \"StatScreen\");","map":{"version":3,"sources":["C:/Users/devin/Documents/python_projects/MUD_game/client/src/StatScreen.tsx"],"names":["React","noBullets","listStyleType","bonusCalc","stat","score","Math","floor","StatHeaders","StatLine","props","slot","value","StatScreen","statList","Object","keys","stats","labels","map","key"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG;AAACC,EAAAA,aAAa,EAAE;AAAhB,CAAlB;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAiCC,KAAjC,EACA;AACI,MAAID,IAAI,KAAK,aAAb,EAA4B,OAAOC,KAAP;AAC5B,SAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,KAAK,GAAG,EAAT,IAAe,CAA1B,CAAP;AACH;;AAED,SAASG,WAAT,GACA;AACI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KATQA,W;;AAWT,SAASC,QAAT,CAAkBC,KAAlB,EACA;AACI,sBACI;AAAA,4BACI;AAAA,gBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKT,SAAS,CAACO,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACE,KAAnB;AAAd;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;MATQH,Q;;AAWT,SAASI,UAAT,CAAoBH,KAApB,EACA;AACI,MAAII,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,KAAlB,CAAf;AACA,MAAIC,MAAM,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,GAAD,iBACX,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,GAAhB;AAAqB,IAAA,KAAK,EAAEV,KAAK,CAACO,KAAN,CAAYG,GAAZ;AAA5B;AAAA;AAAA;AAAA;AAAA,UADF,CAAb;AAEA,sBACI;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;MAXQL,U;AAaT,eAAeA,UAAf","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nconst noBullets = {listStyleType: \"none\"};\r\n\r\nfunction bonusCalc(stat: String, score: number)\r\n{\r\n    if (stat === \"Armor Class\") return score;\r\n    return Math.floor((score - 10) / 2)\r\n}\r\n\r\nfunction StatHeaders()\r\n{\r\n    return(\r\n        <tr>\r\n            <th>\"Ability\"</th>\r\n            <th>\"Score\"</th>\r\n            <th>\"Bonus\"</th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction StatLine(props)\r\n{\r\n    return(\r\n        <tr>\r\n            <td>{props.slot}</td>\r\n            <td>{props.value}</td>\r\n            <td>{bonusCalc(props.slot, props.value)}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction StatScreen(props)\r\n{\r\n    var statList = Object.keys(props.stats);\r\n    var labels = statList.map((key) => \r\n                   <StatLine slot={key} value={props.stats[key]}  />);\r\n    return (\r\n        <table>\r\n            <StatHeaders />\r\n            {labels}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default StatScreen;"]},"metadata":{},"sourceType":"module"}