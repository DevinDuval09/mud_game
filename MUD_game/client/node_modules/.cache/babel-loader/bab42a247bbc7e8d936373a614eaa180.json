{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Documents\\\\python_projects\\\\MUD_game\\\\client\\\\src\\\\StatScreen.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction bonusCalc(stat, score) {\n  if (stat === \"AC\") return null;\n  if (stat === \"\") return null;\n  return Math.floor((score - 10) / 2);\n}\n\nfunction StatHeaders() {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: \"Ability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: \"Bonus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_c = StatHeaders;\n\nfunction StatLine(props) {\n  var slot = props.slot;\n  var score;\n  var bonus;\n\n  if (slot === \"AC\") {\n    score = \"\";\n    bonus = props.value;\n  } else if (slot === \"\") {\n    score = \"\";\n    bonus = \"\";\n  } else {\n    score = props.value;\n    bonus = bonusCalc(slot, score);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: slot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        textAlign: \"right\"\n      },\n      children: bonus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = StatLine;\n\nfunction StatScreen(props) {\n  var statList = Object.keys(props.stats);\n  var labels = statList.map(key => {\n    if (key === \"\") {\n      return /*#__PURE__*/_jsxDEV(StatLine, {\n        slot: key,\n        value: \"\"\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(StatLine, {\n      slot: key,\n      value: props.stats[key]\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(StatHeaders, {}, \"StatHeaders\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), labels]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = StatScreen;\nexport default StatScreen;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StatHeaders\");\n$RefreshReg$(_c2, \"StatLine\");\n$RefreshReg$(_c3, \"StatScreen\");","map":{"version":3,"sources":["C:/Users/devin/Documents/python_projects/MUD_game/client/src/StatScreen.tsx"],"names":["React","bonusCalc","stat","score","Math","floor","StatHeaders","textAlign","StatLine","props","slot","bonus","value","StatScreen","statList","Object","keys","stats","labels","map","key"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAiCC,KAAjC,EACA;AACI,MAAID,IAAI,KAAK,IAAb,EAAmB,OAAO,IAAP;AACnB,MAAIA,IAAI,KAAK,EAAb,EAAiB,OAAO,IAAP;AACjB,SAAOE,IAAI,CAACC,KAAL,CAAW,CAACF,KAAK,GAAG,EAAT,IAAe,CAA1B,CAAP;AACH;;AAED,SAASG,WAAT,GACA;AACI,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,KAAK,EAAE;AAACA,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;KATQD,W;;AAWT,SAASE,QAAT,CAAkBC,KAAlB,EACA;AACI,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIP,KAAJ;AACA,MAAIQ,KAAJ;;AAEA,MAAID,IAAI,KAAK,IAAb,EACA;AACIP,IAAAA,KAAK,GAAG,EAAR;AACAQ,IAAAA,KAAK,GAAGF,KAAK,CAACG,KAAd;AACH,GAJD,MAIO,IAAGF,IAAI,KAAK,EAAZ,EACP;AACIP,IAAAA,KAAK,GAAG,EAAR;AACAQ,IAAAA,KAAK,GAAG,EAAR;AACH,GAJM,MAKP;AACIR,IAAAA,KAAK,GAAGM,KAAK,CAACG,KAAd;AACAD,IAAAA,KAAK,GAAGV,SAAS,CAACS,IAAD,EAAOP,KAAP,CAAjB;AACH;;AACD,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA,gBAAiCG;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,KAAK,EAAE;AAACH,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA,gBAAkCJ;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA,gBAAiCI;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;MA1BQH,Q;;AA4BT,SAASK,UAAT,CAAoBJ,KAApB,EACA;AACI,MAAIK,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,KAAlB,CAAf;AACA,MAAIC,MAAM,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,GAAD,IACV;AAAE,QAAIA,GAAG,KAAK,EAAZ,EACE;AAAC,0BAAO,QAAC,QAAD;AAAoB,QAAA,IAAI,EAAEA,GAA1B;AAA+B,QAAA,KAAK,EAAE;AAAtC,SAAeA,GAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AAAoD;;AACvD,wBAAO,QAAC,QAAD;AAAoB,MAAA,IAAI,EAAEA,GAA1B;AAA+B,MAAA,KAAK,EAAEX,KAAK,CAACQ,KAAN,CAAYG,GAAZ;AAAtC,OAAeA,GAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJJ,CAAb;AAKA,sBACI;AAAA,4BACI,QAAC,WAAD,MAAkB,aAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKF,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;MAdQL,U;AAgBT,eAAeA,UAAf","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nfunction bonusCalc(stat: String, score: number)\r\n{\r\n    if (stat === \"AC\") return null;\r\n    if (stat === \"\") return null;\r\n    return Math.floor((score - 10) / 2)\r\n}\r\n\r\nfunction StatHeaders()\r\n{\r\n    return(\r\n        <tr>\r\n            <th style={{textAlign: \"left\"}}>Ability</th>\r\n            <th style={{textAlign: \"center\"}}>Score</th>\r\n            <th style={{textAlign: \"left\"}}>Bonus</th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction StatLine(props)\r\n{\r\n    var slot = props.slot;\r\n    var score;\r\n    var bonus;\r\n\r\n    if (slot === \"AC\")\r\n    {\r\n        score = \"\";\r\n        bonus = props.value;\r\n    } else if(slot === \"\")\r\n    {\r\n        score = \"\";\r\n        bonus = \"\";\r\n    } else\r\n    {\r\n        score = props.value;\r\n        bonus = bonusCalc(slot, score);\r\n    }\r\n    return(\r\n        <tr>\r\n            <td style={{textAlign: \"left\"}}>{slot}</td>\r\n            <td style={{textAlign:\"center\"}}>{score}</td>\r\n            <td style={{textAlign:\"right\"}}>{bonus}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction StatScreen(props)\r\n{\r\n    var statList = Object.keys(props.stats);\r\n    var labels = statList.map((key) =>\r\n                    { if (key === \"\")\r\n                        {return <StatLine key={key} slot={key} value={\"\"} />}\r\n                      return <StatLine key={key} slot={key} value={props.stats[key]}  />\r\n                    });\r\n    return (\r\n        <table>\r\n            <StatHeaders key={\"StatHeaders\"}/>\r\n            {labels}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default StatScreen;"]},"metadata":{},"sourceType":"module"}