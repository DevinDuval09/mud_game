{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Documents\\\\python_projects\\\\MUD_game\\\\client\\\\src\\\\ui.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListHealth(props) {\n  var col = \"white\";\n\n  if (props.value <= props.maxHealth * .25) {\n    col = \"red\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      color: col\n    },\n    children: [props.label, \": \", props.currentHealth]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ListHealth;\n\nfunction HealthScreen(props) {\n  const listValues = {\n    \"Max Health\": props.maxHealth,\n    \"Current Health\": props.currentHealth\n  };\n  const healthLabels = Object.entries(listValues).map(_ref => {\n    let [text, number] = _ref;\n    return /*#__PURE__*/_jsxDEV(ListHealth, {\n      label: text,\n      value: number\n    }, text, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: healthLabels\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = HealthScreen;\nexport default {\n  HealthScreen\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListHealth\");\n$RefreshReg$(_c2, \"HealthScreen\");","map":{"version":3,"sources":["C:/Users/devin/Documents/python_projects/MUD_game/client/src/ui.tsx"],"names":["React","ListHealth","props","col","value","maxHealth","color","label","currentHealth","HealthScreen","listValues","healthLabels","Object","entries","map","text","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EACA;AACI,MAAIC,GAAG,GAAG,OAAV;;AACA,MAAID,KAAK,CAACE,KAAN,IAAgBF,KAAK,CAACG,SAAN,GAAkB,GAAtC,EACA;AACIF,IAAAA,GAAG,GAAG,KAAN;AACH;;AACD,sBAAO;AAAI,IAAA,KAAK,EAAG;AAACG,MAAAA,KAAK,EAAEH;AAAR,KAAZ;AAAA,eAA2BD,KAAK,CAACK,KAAjC,QAA0CL,KAAK,CAACM,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KARQP,U;;AAUT,SAASQ,YAAT,CAAsBP,KAAtB,EACA;AACI,QAAMQ,UAAU,GAAG;AAAC,kBAAcR,KAAK,CAACG,SAArB;AACC,sBAAkBH,KAAK,CAACM;AADzB,GAAnB;AAEA,QAAMG,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeH,UAAf,EAA2BI,GAA3B,CAA+B;AAAA,QAAC,CAACC,IAAD,EAAOC,MAAP,CAAD;AAAA,wBACpD,QAAC,UAAD;AAAuB,MAAA,KAAK,EAAED,IAA9B;AAAoC,MAAA,KAAK,EAAEC;AAA3C,OAAiBD,IAAjB;AAAA;AAAA;AAAA;AAAA,YADoD;AAAA,GAA/B,CAArB;AAEA,sBACI;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MAXQF,Y;AAeT,eAAe;AACXA,EAAAA;AADW,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nfunction ListHealth(props)\r\n{\r\n    var col = \"white\";\r\n    if (props.value <= (props.maxHealth * .25))\r\n    {\r\n        col = \"red\";\r\n    }\r\n    return <li style ={{color: col}}>{props.label}: {props.currentHealth}</li>\r\n}\r\n\r\nfunction HealthScreen(props)\r\n{\r\n    const listValues = {\"Max Health\": props.maxHealth, \r\n                        \"Current Health\": props.currentHealth};\r\n    const healthLabels = Object.entries(listValues).map(([text, number]) =>\r\n    <ListHealth key={text} label={text} value={number}/>)\r\n    return(\r\n        <ol>\r\n            {healthLabels}\r\n        </ol>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    HealthScreen,\r\n}"]},"metadata":{},"sourceType":"module"}